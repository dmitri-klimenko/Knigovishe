@using Knigosha.Core.Models.Enums
@using Knigosha.Views.Manage
@model List<Knigosha.Core.Models.UserSubscription>
@{
    ViewData["Title"] = "Мои абонементы";
    ViewData.AddActivePage(ManageNavPages.Licenses);
}

<td colspan="2" valign="top" style="border-top:1px solid #ffdb60;padding-top:50px;padding-left:50px;">
    <h3>Мои абонементы</h3>
    @if (Model.Count == 0)
    {
        <text>Всё еще нет приобретённых абонементов.</text>
        <div style="height:10px;"></div>
        <a asp-controller="Manage" asp-action="Order" class="button">Купить абонемент</a><div style="height:15px;"></div>
    }
    else
    {
        <table class="table">
            <tr>
                <th>Номер </th>
                <th>Тип абонемента</th>
                <th>Заказан</th>
                <th>Учебный год</th>
                <th>Способ оплаты</th>
                <th>Цена</th>
                <th>Статус</th>
                <th>Ключ активации</th>
            </tr>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td align="center">@Model[i].Id</td>
                    <td align="center">@Html.DisplayFor(m => m[i].Subscription.SubscriptionType)</td>
                    <td align="center">@Model[i].OrderedOn</td>
                    <td align="center">@Model[i].SchoolYear</td>
                    <td align="center">@Html.DisplayFor(m => m[i].PaymentType)</td>
                    <td align="center">@Model[i].Subscription.CurrentPrice</td>
                    <td align="center"><a asp-comtroller="Manage" asp-action="Order" asp-route-id=@Model[i].SubscriptionId asp-route-old=@Model[i].Id>@Html.DisplayFor(m => m[i].Status)</a></td>
                    <td align="center">
                        @if (Model[i].Status == StatusTypes.Paid || Model[i].Status == StatusTypes.Activated)
                        {
                            switch (Model[i].Subscription.SubscriptionType)
                            {
                                case SubscriptionTypes.Student:
                                    @Model[i].ActivationKeys.Single(ak => ak.ActivationKeyType == ActivationKeyTypes.Student).Code
                                    break;
                                case SubscriptionTypes.Family:
                                    @Model[i].ActivationKeys.Single(ak => ak.ActivationKeyType == ActivationKeyTypes.Family).Code
                                    break;
                                case SubscriptionTypes.Class:
                                    @Model[i].ActivationKeys.Single(ak => ak.ActivationKeyType == ActivationKeyTypes.Class).Code
                                    break;
                            }
                        }
                    </td>
                </tr>
                @if (Model[i].PaymentType == PaymentType.BankTransfer && Model[i].Status == StatusTypes.Waiting)
                {
                    <tr>
                        <td colspan="4"></td>
                        <td colspan="4">
                            Данные банковского счёта:<br>
                            Получатель: ФОНДАЦИЯ ГУТЕНБЕРГ 3.0<br>
                            Банк: UniCredit Bulbank<br>
                            BIC: UNCRBGSF<br>
                            IBAN: BG30UNCR70001523277151<br>
                            Предмет оплаты: <span style="font-weight: bold">Абонемент номер @Model[i].Id</span>
                        </td>
                    </tr>
                }

            }

        </table>
    }
</td>