// <auto-generated />
using System;
using Knigosha.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Knigosha.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190901212640_SeedCountries")]
    partial class SeedCountries
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Knigosha.Core.Models.ActivationKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("UserSubscriptionId");

                    b.HasKey("Id");

                    b.HasIndex("UserSubscriptionId");

                    b.ToTable("ActivationKeys");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Answer", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<string>("UserId");

                    b.Property<int>("AnswerType");

                    b.Property<string>("DateTime");

                    b.Property<int>("Id");

                    b.Property<int>("NumberOfSkippedQuestions");

                    b.Property<int>("NumberOfWriteResponses");

                    b.Property<int>("NumberOfWrongResponses");

                    b.Property<int>("PercentageOfRightResponses");

                    b.Property<int>("PercentageOfSkippedQuestions");

                    b.Property<int>("PercentageOfWrongResponses");

                    b.Property<int>("QuizType");

                    b.Property<string>("ReasonForRestart");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Knigosha.Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("City");

                    b.Property<string>("ClassId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Country");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FamilyId");

                    b.Property<int>("Grade");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<int?>("NumberOfCreatedBooks");

                    b.Property<int?>("NumberPointsForCreatedBooks");

                    b.Property<string>("Parallel");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Photo");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("StudentId");

                    b.Property<bool?>("SubscribedToNewsletter");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("UserType");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("StudentId");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedByAdmin");

                    b.Property<string>("BookAuthor")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("BookCategory");

                    b.Property<float>("CalculatedRating");

                    b.Property<string>("CoverPhoto")
                        .IsRequired();

                    b.Property<int>("DateAdded");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Grade");

                    b.Property<bool>("IsShortForm");

                    b.Property<string>("Isbn1")
                        .IsRequired();

                    b.Property<string>("Isbn2");

                    b.Property<int>("NumberOfComprehensionQuestions");

                    b.Property<int>("NumberOfContentQuestions");

                    b.Property<int>("NumberOfPages");

                    b.Property<int>("PartOfSchoolProgramAtGrade");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("QuestionsAuthor")
                        .IsRequired();

                    b.Property<string>("Tags")
                        .IsRequired();

                    b.Property<int>("TimesCompleted");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Translator");

                    b.Property<string>("YearPublished")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Knigosha.Core.Models.BookNote", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<string>("UserId");

                    b.Property<string>("DateTime");

                    b.Property<string>("Text")
                        .HasMaxLength(255);

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BookNotes");
                });

            modelBuilder.Entity("Knigosha.Core.Models.BookRating", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<string>("UserId");

                    b.Property<string>("DateTime");

                    b.Property<int>("Rating");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("BookRatings");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 19,
                            Title = "Австралия"
                        },
                        new
                        {
                            Id = 20,
                            Title = "Австрия"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Азербайджан"
                        },
                        new
                        {
                            Id = 21,
                            Title = "Албания"
                        },
                        new
                        {
                            Id = 22,
                            Title = "Алжир"
                        },
                        new
                        {
                            Id = 23,
                            Title = "Американское Самоа"
                        },
                        new
                        {
                            Id = 24,
                            Title = "Ангилья"
                        },
                        new
                        {
                            Id = 25,
                            Title = "Ангола"
                        },
                        new
                        {
                            Id = 26,
                            Title = "Андорра"
                        },
                        new
                        {
                            Id = 27,
                            Title = "Антигуа и Барбуда"
                        },
                        new
                        {
                            Id = 28,
                            Title = "Аргентина"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Армения"
                        },
                        new
                        {
                            Id = 29,
                            Title = "Аруба"
                        },
                        new
                        {
                            Id = 30,
                            Title = "Афганистан"
                        },
                        new
                        {
                            Id = 31,
                            Title = "Багамы"
                        },
                        new
                        {
                            Id = 32,
                            Title = "Бангладеш"
                        },
                        new
                        {
                            Id = 33,
                            Title = "Барбадос"
                        },
                        new
                        {
                            Id = 34,
                            Title = "Бахрейн"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Беларусь"
                        },
                        new
                        {
                            Id = 35,
                            Title = "Белиз"
                        },
                        new
                        {
                            Id = 36,
                            Title = "Бельгия"
                        },
                        new
                        {
                            Id = 37,
                            Title = "Бенин"
                        },
                        new
                        {
                            Id = 38,
                            Title = "Бермуды"
                        },
                        new
                        {
                            Id = 39,
                            Title = "Болгария"
                        },
                        new
                        {
                            Id = 40,
                            Title = "Боливия"
                        },
                        new
                        {
                            Id = 235,
                            Title = "Бонайре, Синт-Эстатиус и Саба"
                        },
                        new
                        {
                            Id = 41,
                            Title = "Босния и Герцеговина"
                        },
                        new
                        {
                            Id = 42,
                            Title = "Ботсвана"
                        },
                        new
                        {
                            Id = 43,
                            Title = "Бразилия"
                        },
                        new
                        {
                            Id = 44,
                            Title = "Бруней"
                        },
                        new
                        {
                            Id = 45,
                            Title = "Буркина-Фасо"
                        },
                        new
                        {
                            Id = 46,
                            Title = "Бурунди"
                        },
                        new
                        {
                            Id = 47,
                            Title = "Бутан"
                        },
                        new
                        {
                            Id = 48,
                            Title = "Вануату"
                        },
                        new
                        {
                            Id = 233,
                            Title = "Ватикан"
                        },
                        new
                        {
                            Id = 49,
                            Title = "Великобритания"
                        },
                        new
                        {
                            Id = 50,
                            Title = "Венгрия"
                        },
                        new
                        {
                            Id = 51,
                            Title = "Венесуэла"
                        },
                        new
                        {
                            Id = 52,
                            Title = "Виргинские острова, Великобритания"
                        },
                        new
                        {
                            Id = 53,
                            Title = "Виргинские острова, США"
                        },
                        new
                        {
                            Id = 54,
                            Title = "Восточный Тимор"
                        },
                        new
                        {
                            Id = 55,
                            Title = "Вьетнам"
                        },
                        new
                        {
                            Id = 56,
                            Title = "Габон"
                        },
                        new
                        {
                            Id = 57,
                            Title = "Гаити"
                        },
                        new
                        {
                            Id = 58,
                            Title = "Гайана"
                        },
                        new
                        {
                            Id = 59,
                            Title = "Гамбия"
                        },
                        new
                        {
                            Id = 60,
                            Title = "Гана"
                        },
                        new
                        {
                            Id = 61,
                            Title = "Гваделупа"
                        },
                        new
                        {
                            Id = 62,
                            Title = "Гватемала"
                        },
                        new
                        {
                            Id = 63,
                            Title = "Гвинея"
                        },
                        new
                        {
                            Id = 64,
                            Title = "Гвинея-Бисау"
                        },
                        new
                        {
                            Id = 65,
                            Title = "Германия"
                        },
                        new
                        {
                            Id = 236,
                            Title = "Гернси"
                        },
                        new
                        {
                            Id = 66,
                            Title = "Гибралтар"
                        },
                        new
                        {
                            Id = 67,
                            Title = "Гондурас"
                        },
                        new
                        {
                            Id = 69,
                            Title = "Гренада"
                        },
                        new
                        {
                            Id = 70,
                            Title = "Гренландия"
                        },
                        new
                        {
                            Id = 71,
                            Title = "Греция"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Грузия"
                        },
                        new
                        {
                            Id = 72,
                            Title = "Гуам"
                        },
                        new
                        {
                            Id = 73,
                            Title = "Дания"
                        },
                        new
                        {
                            Id = 237,
                            Title = "Джерси"
                        },
                        new
                        {
                            Id = 231,
                            Title = "Джибути"
                        },
                        new
                        {
                            Id = 74,
                            Title = "Доминика"
                        },
                        new
                        {
                            Id = 75,
                            Title = "Доминиканская Республика"
                        },
                        new
                        {
                            Id = 76,
                            Title = "Египет"
                        },
                        new
                        {
                            Id = 77,
                            Title = "Замбия"
                        },
                        new
                        {
                            Id = 78,
                            Title = "Западная Сахара"
                        },
                        new
                        {
                            Id = 79,
                            Title = "Зимбабве"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Израиль"
                        },
                        new
                        {
                            Id = 80,
                            Title = "Индия"
                        },
                        new
                        {
                            Id = 81,
                            Title = "Индонезия"
                        },
                        new
                        {
                            Id = 82,
                            Title = "Иордания"
                        },
                        new
                        {
                            Id = 83,
                            Title = "Ирак"
                        },
                        new
                        {
                            Id = 84,
                            Title = "Иран"
                        },
                        new
                        {
                            Id = 85,
                            Title = "Ирландия"
                        },
                        new
                        {
                            Id = 86,
                            Title = "Исландия"
                        },
                        new
                        {
                            Id = 87,
                            Title = "Испания"
                        },
                        new
                        {
                            Id = 88,
                            Title = "Италия"
                        },
                        new
                        {
                            Id = 89,
                            Title = "Йемен"
                        },
                        new
                        {
                            Id = 90,
                            Title = "Кабо-Верде"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Казахстан"
                        },
                        new
                        {
                            Id = 91,
                            Title = "Камбоджа"
                        },
                        new
                        {
                            Id = 92,
                            Title = "Камерун"
                        },
                        new
                        {
                            Id = 10,
                            Title = "Канада"
                        },
                        new
                        {
                            Id = 93,
                            Title = "Катар"
                        },
                        new
                        {
                            Id = 94,
                            Title = "Кения"
                        },
                        new
                        {
                            Id = 95,
                            Title = "Кипр"
                        },
                        new
                        {
                            Id = 96,
                            Title = "Кирибати"
                        },
                        new
                        {
                            Id = 97,
                            Title = "Китай"
                        },
                        new
                        {
                            Id = 98,
                            Title = "Колумбия"
                        },
                        new
                        {
                            Id = 99,
                            Title = "Коморы"
                        },
                        new
                        {
                            Id = 100,
                            Title = "Конго"
                        },
                        new
                        {
                            Id = 101,
                            Title = "Конго, демократическая республика"
                        },
                        new
                        {
                            Id = 102,
                            Title = "Коста-Рика"
                        },
                        new
                        {
                            Id = 103,
                            Title = "Кот-д'Ивуар"
                        },
                        new
                        {
                            Id = 104,
                            Title = "Куба"
                        },
                        new
                        {
                            Id = 105,
                            Title = "Кувейт"
                        },
                        new
                        {
                            Id = 11,
                            Title = "Кыргызстан"
                        },
                        new
                        {
                            Id = 138,
                            Title = "Кюрасао"
                        },
                        new
                        {
                            Id = 106,
                            Title = "Лаос"
                        },
                        new
                        {
                            Id = 12,
                            Title = "Латвия"
                        },
                        new
                        {
                            Id = 107,
                            Title = "Лесото"
                        },
                        new
                        {
                            Id = 108,
                            Title = "Либерия"
                        },
                        new
                        {
                            Id = 109,
                            Title = "Ливан"
                        },
                        new
                        {
                            Id = 110,
                            Title = "Ливия"
                        },
                        new
                        {
                            Id = 13,
                            Title = "Литва"
                        },
                        new
                        {
                            Id = 111,
                            Title = "Лихтенштейн"
                        },
                        new
                        {
                            Id = 112,
                            Title = "Люксембург"
                        },
                        new
                        {
                            Id = 113,
                            Title = "Маврикий"
                        },
                        new
                        {
                            Id = 114,
                            Title = "Мавритания"
                        },
                        new
                        {
                            Id = 115,
                            Title = "Мадагаскар"
                        },
                        new
                        {
                            Id = 118,
                            Title = "Малави"
                        },
                        new
                        {
                            Id = 119,
                            Title = "Малайзия"
                        },
                        new
                        {
                            Id = 120,
                            Title = "Мали"
                        },
                        new
                        {
                            Id = 121,
                            Title = "Мальдивы"
                        },
                        new
                        {
                            Id = 122,
                            Title = "Мальта"
                        },
                        new
                        {
                            Id = 123,
                            Title = "Марокко"
                        },
                        new
                        {
                            Id = 124,
                            Title = "Мартиника"
                        },
                        new
                        {
                            Id = 125,
                            Title = "Маршалловы Острова"
                        },
                        new
                        {
                            Id = 126,
                            Title = "Мексика"
                        },
                        new
                        {
                            Id = 127,
                            Title = "Микронезия, федеративные штаты"
                        },
                        new
                        {
                            Id = 128,
                            Title = "Мозамбик"
                        },
                        new
                        {
                            Id = 15,
                            Title = "Молдова"
                        },
                        new
                        {
                            Id = 129,
                            Title = "Монако"
                        },
                        new
                        {
                            Id = 130,
                            Title = "Монголия"
                        },
                        new
                        {
                            Id = 131,
                            Title = "Монтсеррат"
                        },
                        new
                        {
                            Id = 132,
                            Title = "Мьянма"
                        },
                        new
                        {
                            Id = 133,
                            Title = "Намибия"
                        },
                        new
                        {
                            Id = 134,
                            Title = "Науру"
                        },
                        new
                        {
                            Id = 135,
                            Title = "Непал"
                        },
                        new
                        {
                            Id = 136,
                            Title = "Нигер"
                        },
                        new
                        {
                            Id = 137,
                            Title = "Нигерия"
                        },
                        new
                        {
                            Id = 139,
                            Title = "Нидерланды"
                        },
                        new
                        {
                            Id = 140,
                            Title = "Никарагуа"
                        },
                        new
                        {
                            Id = 141,
                            Title = "Ниуэ"
                        },
                        new
                        {
                            Id = 142,
                            Title = "Новая Зеландия"
                        },
                        new
                        {
                            Id = 143,
                            Title = "Новая Каледония"
                        },
                        new
                        {
                            Id = 144,
                            Title = "Норвегия"
                        },
                        new
                        {
                            Id = 145,
                            Title = "Объединенные Арабские Эмираты"
                        },
                        new
                        {
                            Id = 146,
                            Title = "Оман"
                        },
                        new
                        {
                            Id = 147,
                            Title = "Остров Мэн"
                        },
                        new
                        {
                            Id = 148,
                            Title = "Остров Норфолк"
                        },
                        new
                        {
                            Id = 149,
                            Title = "Острова Кайман"
                        },
                        new
                        {
                            Id = 150,
                            Title = "Острова Кука"
                        },
                        new
                        {
                            Id = 151,
                            Title = "Острова Теркс и Кайкос"
                        },
                        new
                        {
                            Id = 152,
                            Title = "Пакистан"
                        },
                        new
                        {
                            Id = 153,
                            Title = "Палау"
                        },
                        new
                        {
                            Id = 154,
                            Title = "Палестинская автономия"
                        },
                        new
                        {
                            Id = 155,
                            Title = "Панама"
                        },
                        new
                        {
                            Id = 156,
                            Title = "Папуа — Новая Гвинея"
                        },
                        new
                        {
                            Id = 157,
                            Title = "Парагвай"
                        },
                        new
                        {
                            Id = 158,
                            Title = "Перу"
                        },
                        new
                        {
                            Id = 159,
                            Title = "Питкерн"
                        },
                        new
                        {
                            Id = 160,
                            Title = "Польша"
                        },
                        new
                        {
                            Id = 161,
                            Title = "Португалия"
                        },
                        new
                        {
                            Id = 162,
                            Title = "Пуэрто-Рико"
                        },
                        new
                        {
                            Id = 163,
                            Title = "Реюньон"
                        },
                        new
                        {
                            Id = 1,
                            Title = "Россия"
                        },
                        new
                        {
                            Id = 164,
                            Title = "Руанда"
                        },
                        new
                        {
                            Id = 165,
                            Title = "Румыния"
                        },
                        new
                        {
                            Id = 9,
                            Title = "США"
                        },
                        new
                        {
                            Id = 166,
                            Title = "Сальвадор"
                        },
                        new
                        {
                            Id = 167,
                            Title = "Самоа"
                        },
                        new
                        {
                            Id = 168,
                            Title = "Сан-Марино"
                        },
                        new
                        {
                            Id = 169,
                            Title = "Сан-Томе и Принсипи"
                        },
                        new
                        {
                            Id = 170,
                            Title = "Саудовская Аравия"
                        },
                        new
                        {
                            Id = 171,
                            Title = "Свазиленд"
                        },
                        new
                        {
                            Id = 172,
                            Title = "Святая Елена"
                        },
                        new
                        {
                            Id = 173,
                            Title = "Северная Корея"
                        },
                        new
                        {
                            Id = 117,
                            Title = "Северная Македония"
                        },
                        new
                        {
                            Id = 174,
                            Title = "Северные Марианские острова"
                        },
                        new
                        {
                            Id = 175,
                            Title = "Сейшелы"
                        },
                        new
                        {
                            Id = 176,
                            Title = "Сенегал"
                        },
                        new
                        {
                            Id = 177,
                            Title = "Сент-Винсент и Гренадины"
                        },
                        new
                        {
                            Id = 178,
                            Title = "Сент-Китс и Невис"
                        },
                        new
                        {
                            Id = 179,
                            Title = "Сент-Люсия"
                        },
                        new
                        {
                            Id = 180,
                            Title = "Сент-Пьер и Микелон"
                        },
                        new
                        {
                            Id = 181,
                            Title = "Сербия"
                        },
                        new
                        {
                            Id = 182,
                            Title = "Сингапур"
                        },
                        new
                        {
                            Id = 234,
                            Title = "Синт-Мартен"
                        },
                        new
                        {
                            Id = 183,
                            Title = "Сирия"
                        },
                        new
                        {
                            Id = 184,
                            Title = "Словакия"
                        },
                        new
                        {
                            Id = 185,
                            Title = "Словения"
                        },
                        new
                        {
                            Id = 186,
                            Title = "Соломоновы Острова"
                        },
                        new
                        {
                            Id = 187,
                            Title = "Сомали"
                        },
                        new
                        {
                            Id = 188,
                            Title = "Судан"
                        },
                        new
                        {
                            Id = 189,
                            Title = "Суринам"
                        },
                        new
                        {
                            Id = 190,
                            Title = "Сьерра-Леоне"
                        },
                        new
                        {
                            Id = 16,
                            Title = "Таджикистан"
                        },
                        new
                        {
                            Id = 191,
                            Title = "Таиланд"
                        },
                        new
                        {
                            Id = 192,
                            Title = "Тайвань"
                        },
                        new
                        {
                            Id = 193,
                            Title = "Танзания"
                        },
                        new
                        {
                            Id = 194,
                            Title = "Того"
                        },
                        new
                        {
                            Id = 195,
                            Title = "Токелау"
                        },
                        new
                        {
                            Id = 196,
                            Title = "Тонга"
                        },
                        new
                        {
                            Id = 197,
                            Title = "Тринидад и Тобаго"
                        },
                        new
                        {
                            Id = 198,
                            Title = "Тувалу"
                        },
                        new
                        {
                            Id = 199,
                            Title = "Тунис"
                        },
                        new
                        {
                            Id = 17,
                            Title = "Туркменистан"
                        },
                        new
                        {
                            Id = 200,
                            Title = "Турция"
                        },
                        new
                        {
                            Id = 201,
                            Title = "Уганда"
                        },
                        new
                        {
                            Id = 18,
                            Title = "Узбекистан"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Украина"
                        },
                        new
                        {
                            Id = 202,
                            Title = "Уоллис и Футуна"
                        },
                        new
                        {
                            Id = 203,
                            Title = "Уругвай"
                        },
                        new
                        {
                            Id = 204,
                            Title = "Фарерские острова"
                        },
                        new
                        {
                            Id = 205,
                            Title = "Фиджи"
                        },
                        new
                        {
                            Id = 206,
                            Title = "Филиппины"
                        },
                        new
                        {
                            Id = 207,
                            Title = "Финляндия"
                        },
                        new
                        {
                            Id = 208,
                            Title = "Фолклендские острова"
                        },
                        new
                        {
                            Id = 209,
                            Title = "Франция"
                        },
                        new
                        {
                            Id = 210,
                            Title = "Французская Гвиана"
                        },
                        new
                        {
                            Id = 211,
                            Title = "Французская Полинезия"
                        },
                        new
                        {
                            Id = 212,
                            Title = "Хорватия"
                        },
                        new
                        {
                            Id = 213,
                            Title = "Центральноафриканская Республика"
                        },
                        new
                        {
                            Id = 214,
                            Title = "Чад"
                        },
                        new
                        {
                            Id = 230,
                            Title = "Черногория"
                        },
                        new
                        {
                            Id = 215,
                            Title = "Чехия"
                        },
                        new
                        {
                            Id = 216,
                            Title = "Чили"
                        },
                        new
                        {
                            Id = 217,
                            Title = "Швейцария"
                        },
                        new
                        {
                            Id = 218,
                            Title = "Швеция"
                        },
                        new
                        {
                            Id = 219,
                            Title = "Шпицберген и Ян Майен"
                        },
                        new
                        {
                            Id = 220,
                            Title = "Шри-Ланка"
                        },
                        new
                        {
                            Id = 221,
                            Title = "Эквадор"
                        },
                        new
                        {
                            Id = 222,
                            Title = "Экваториальная Гвинея"
                        },
                        new
                        {
                            Id = 223,
                            Title = "Эритрея"
                        },
                        new
                        {
                            Id = 14,
                            Title = "Эстония"
                        },
                        new
                        {
                            Id = 224,
                            Title = "Эфиопия"
                        },
                        new
                        {
                            Id = 226,
                            Title = "Южная Корея"
                        },
                        new
                        {
                            Id = 227,
                            Title = "Южно-Африканская Республика"
                        },
                        new
                        {
                            Id = 232,
                            Title = "Южный Судан"
                        },
                        new
                        {
                            Id = 228,
                            Title = "Ямайка"
                        },
                        new
                        {
                            Id = 229,
                            Title = "Япония"
                        });
                });

            modelBuilder.Entity("Knigosha.Core.Models.MarkedBook", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<string>("UserId");

                    b.Property<string>("DateTime");

                    b.HasKey("BookId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("MarkedBooks");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId");

                    b.Property<int>("QuestionType");

                    b.Property<string>("RightAnswer")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("WrongAnswer1")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("WrongAnswer2")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Knigosha.Core.Models.ReceivedMessage", b =>
                {
                    b.Property<string>("ReceiverId");

                    b.Property<string>("SenderId");

                    b.Property<string>("Body");

                    b.Property<string>("DateTime");

                    b.Property<string>("Topic");

                    b.HasKey("ReceiverId", "SenderId");

                    b.HasIndex("SenderId");

                    b.ToTable("ReceivedMessages");
                });

            modelBuilder.Entity("Knigosha.Core.Models.SentMessage", b =>
                {
                    b.Property<string>("ReceiverId");

                    b.Property<string>("SenderId");

                    b.Property<string>("Body");

                    b.Property<string>("DateTime");

                    b.Property<string>("Topic");

                    b.HasKey("ReceiverId", "SenderId");

                    b.HasIndex("SenderId");

                    b.ToTable("SentMessages");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankData");

                    b.Property<int>("MaxQuizzes");

                    b.Property<int>("NumberOfParentProfiles");

                    b.Property<int>("NumberOfStudentProfiles");

                    b.Property<int>("NumberOfTeacherProfiles");

                    b.Property<int>("Price");

                    b.Property<string>("PriceTag")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("SubscriptionType");

                    b.Property<string>("Text1")
                        .HasMaxLength(255);

                    b.Property<string>("Text2")
                        .HasMaxLength(255);

                    b.Property<string>("Text3")
                        .HasMaxLength(255);

                    b.Property<string>("ValidUntil");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Knigosha.Core.Models.UserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPaid");

                    b.Property<string>("Note");

                    b.Property<string>("OrderedOn");

                    b.Property<int>("PaymentType");

                    b.Property<int>("Status");

                    b.Property<int>("SubscriptionId");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscriptions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Class", b =>
                {
                    b.HasBaseType("Knigosha.Core.Models.ApplicationUser");

                    b.Property<int>("NumberOfClassesInAgeGroup");

                    b.Property<int>("NumberOfStudentsInClass");

                    b.Property<int>("PositionInAgeGroupAccordingToTotalNumberOfAnswers");

                    b.Property<int>("PositionInAgeGroupAccordingToTotalNumberOfRightResponses");

                    b.Property<int>("PositionInAgeGroupAccordingToTotalPoints");

                    b.Property<string>("School");

                    b.Property<int>("TopPercentageInAgeGroupAccordingToTotalNumberOfAnswers");

                    b.Property<int>("TopPercentageInAgeGroupAccordingToTotalNumberOfRightResponses");

                    b.Property<int>("TopPercentageInAgeGroupAccordingToTotalPoints");

                    b.Property<int>("TotalNumberOfAnswers");

                    b.Property<int>("TotalPercentageOfRightResponses");

                    b.Property<int>("TotalPoints");

                    b.ToTable("Classes");

                    b.HasDiscriminator().HasValue("Class");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Family", b =>
                {
                    b.HasBaseType("Knigosha.Core.Models.ApplicationUser");

                    b.Property<int>("NumberOfFamiliesInAgeGroup");

                    b.Property<int>("NumberOfStudentsInFamily");

                    b.Property<int>("PositionInAgeGroupAccordingToTotalNumberOfAnswers")
                        .HasColumnName("Family_PositionInAgeGroupAccordingToTotalNumberOfAnswers");

                    b.Property<int>("PositionInAgeGroupAccordingToTotalNumberOfRightResponses")
                        .HasColumnName("Family_PositionInAgeGroupAccordingToTotalNumberOfRightResponses");

                    b.Property<int>("PositionInAgeGroupAccordingToTotalPoints")
                        .HasColumnName("Family_PositionInAgeGroupAccordingToTotalPoints");

                    b.Property<bool>("ShowAchievements");

                    b.Property<int>("TopPercentageInAgeGroupAccordingToTotalNumberOfAnswers")
                        .HasColumnName("Family_TopPercentageInAgeGroupAccordingToTotalNumberOfAnswers");

                    b.Property<int>("TopPercentageInAgeGroupAccordingToTotalNumberOfRightResponses")
                        .HasColumnName("Family_TopPercentageInAgeGroupAccordingToTotalNumberOfRightResponses");

                    b.Property<int>("TopPercentageInAgeGroupAccordingToTotalPoints")
                        .HasColumnName("Family_TopPercentageInAgeGroupAccordingToTotalPoints");

                    b.Property<int>("TotalNumberOfAnswers")
                        .HasColumnName("Family_TotalNumberOfAnswers");

                    b.Property<int>("TotalPercentageOfRightResponses")
                        .HasColumnName("Family_TotalPercentageOfRightResponses");

                    b.Property<int>("TotalPoints")
                        .HasColumnName("Family_TotalPoints");

                    b.ToTable("Families");

                    b.HasDiscriminator().HasValue("Family");
                });

            modelBuilder.Entity("Knigosha.Core.Models.Student", b =>
                {
                    b.HasBaseType("Knigosha.Core.Models.ApplicationUser");

                    b.Property<string>("ClassStudentBelongsToId");

                    b.Property<string>("FamilyStudentBelongsToId");

                    b.Property<string>("GreetingName");

                    b.Property<string>("Level");

                    b.Property<int>("NumberOfAnswers");

                    b.Property<string>("ParentEmail");

                    b.Property<int>("PercentageOfRightResponses");

                    b.Property<int>("Points");

                    b.Property<int>("PositionInClassAccordingToNumberOfAnswers");

                    b.Property<int>("PositionInClassAccordingToPercentageOfRightResponses");

                    b.Property<int>("PositionInClassAccordingToPoints");

                    b.Property<int>("PositionInFamilyAccordingToNumberOfAnswers");

                    b.Property<int>("PositionInFamilyAccordingToPercentageOfRightResponses");

                    b.Property<int>("PositionInFamilyAccordingToPoints");

                    b.Property<string>("School")
                        .HasColumnName("Student_School");

                    b.HasIndex("ClassStudentBelongsToId");

                    b.HasIndex("FamilyStudentBelongsToId");

                    b.ToTable("Students");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("Knigosha.Core.Models.ActivationKey", b =>
                {
                    b.HasOne("Knigosha.Core.Models.UserSubscription", "UserSubscription")
                        .WithMany("ActivationKeys")
                        .HasForeignKey("UserSubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.Answer", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Book", "Book")
                        .WithMany("Answers")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Knigosha.Core.Models.ApplicationUser", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("Knigosha.Core.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("Knigosha.Core.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Knigosha.Core.Models.BookNote", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "User")
                        .WithMany("BookNotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.BookRating", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "User")
                        .WithMany("BookRatings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.MarkedBook", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "User")
                        .WithMany("MarkedBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.Question", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Book", "Book")
                        .WithMany("Questions")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.ReceivedMessage", b =>
                {
                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.SentMessage", b =>
                {
                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Knigosha.Core.Models.UserSubscription", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Subscription", "Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser", "User")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Knigosha.Core.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Knigosha.Core.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Knigosha.Core.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Knigosha.Core.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Knigosha.Core.Models.Student", b =>
                {
                    b.HasOne("Knigosha.Core.Models.Class", "ClassStudentBelongsTo")
                        .WithMany("Students")
                        .HasForeignKey("ClassStudentBelongsToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Knigosha.Core.Models.Family", "FamilyStudentBelongsTo")
                        .WithMany("Students")
                        .HasForeignKey("FamilyStudentBelongsToId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
